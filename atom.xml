<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://gwesley.tk/"/>
  <updated>2016-12-20T07:42:23.000Z</updated>
  <id>http://gwesley.tk/</id>
  
  <author>
    <name>GWesley</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Unexpected precedence issues with try? and as?</title>
    <link href="http://gwesley.tk/2016/12/20/test/"/>
    <id>http://gwesley.tk/2016/12/20/test/</id>
    <published>2016-12-20T06:19:12.000Z</published>
    <updated>2016-12-20T07:42:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>Tim Vermeulen recently wrote on the Swift Evolution list that try? precedence can be unexpected:</p>
<pre><code class="swift"><span class="keyword">if</span> <span class="keyword">let</span> int = <span class="keyword">try</span>? mightReturnInt() <span class="keyword">as</span>? <span class="type">Int</span> {

 <span class="built_in">print</span>(int) <span class="comment">// =&gt; Optional(3)</span>

}
</code></pre>
<p>Specifically, he discovered that try?’s precedence is lower than as?’s precedence, so you may have to add parentheses to get the right result.</p>
<pre><code class="swift"><span class="keyword">if</span> <span class="keyword">let</span> int = (<span class="keyword">try</span>? mightReturnInt()) <span class="keyword">as</span>? <span class="type">Int</span> {
    <span class="built_in">print</span>(int) <span class="comment">// =&gt; 3</span>
}
</code></pre>
<p>He also found a similar issue with using try? on a throwing-optional-returning scenario:</p>
<pre><code class="swift"><span class="keyword">if</span> <span class="keyword">let</span> int = <span class="keyword">try</span>? mightReturnInt() {
    <span class="built_in">print</span>(int) <span class="comment">// =&gt; Optional(3)</span>
}

<span class="keyword">if</span> <span class="keyword">let</span> int = (<span class="keyword">try</span>? mightReturnInt()) ?? <span class="literal">nil</span> {
    <span class="built_in">print</span>(int) <span class="comment">// =&gt; 3</span>
}
</code></pre>
<p>There’s some magic baked into if let item = item as? T that automatically lifts optionals, which doesn’t yet seem to extend to try?. If you’re running into these situations, consider adding parentheses and nil-coalescing as demonstrated in these examples.</p>
<p>In case you think a throwing-optional scenario is too “out there”, think of a file system request that would throw on an unreadable directory and return nil if a specific file does not exist. Although obscure, it is not unthinkable to combine the two approaches.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Tim Vermeulen recently wrote on the Swift Evolution list that try? precedence can be unexpected:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;swift&quot;&gt;&lt;span class
    
    </summary>
    
    
      <category term="iOS" scheme="http://gwesley.tk/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://gwesley.tk/2016/12/20/hello-world/"/>
    <id>http://gwesley.tk/2016/12/20/hello-world/</id>
    <published>2016-12-20T02:55:21.000Z</published>
    <updated>2016-12-20T06:36:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
      <category term="other" scheme="http://gwesley.tk/tags/other/"/>
    
  </entry>
  
</feed>
